version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres-container
    environment:
      POSTGRES_USER: sam
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: library
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - library-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-container
    environment:
      PGADMIN_DEFAULT_EMAIL: sam@example.com
      PGADMIN_DEFAULT_PASSWORD: sampass
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - library-network

  app:
    container_name: eureka
    build:
      context: ./eureka
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - postgres
    networks:
      - library-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  app1:
    container_name: student-app
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    build:
      context: ./student
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - app
    networks:
      - library-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  app2:
    container_name: book-app
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    build:
      context: ./book
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - app1
    networks:
      - library-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  app3:
    container_name: gateway-app
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - app2
    networks:
      - library-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  postgres-data:
    driver: local

networks:
  library-network:
    driver: bridge
